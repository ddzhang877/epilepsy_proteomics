#cox#
fit <- coxph(Surv(Epilepsy_years,Epilepsy_status==1)~Protein+age+as.factor(sex)+as.factor(ethn)+as.factor(Qaulification)+bmi+Socioeconomic+as.factor(Smoking_status)+as.factor(Alcohol_consumption),data=mydata)
summary(fit)

#linear regression analysis#
fit <- lm(Protein~Epilepsy_status+age+as.factor(sex)+as.factor(ethn)+as.factor(Qaulification)+bmi+Socioeconomic+as.factor(Smoking_status)+as.factor(Alcohol_consumption),data=mydata)
summary(fit)

#volcano plot#
ggplot(data,aes(HR, -log10(p.value)))+
  geom_hline(yintercept = -log10(0.05/2920), linetype = "dashed", color = "black")+
  geom_vline(xintercept = 1, linetype = "dashed", color = "black")+
  geom_point(aes(color = change),size = 3.5, 
             alpha = 0.5)+
  scale_size_continuous(range = c(0,1))+
  scale_x_continuous(limits = c(0,3))+
  theme_bw(base_size = 12)+
  theme(panel.grid = element_blank(),
        legend.position = 'right',
        legend.justification = c(0,1))+
  guides(col = 
           guide_colorbar(title = "-Log10_p-value",
                          ticks.colour = NA,
                          reverse = T,
                          title.vjust = 0.8,
                          barheight = 8,
                          barwidth = 1),
         size = "none") +
  geom_text_repel(data = filter(data, Exposure %in% core_pro),
                  max.overlaps = getOption("ggrepel.max.overlaps", default = 20),
                  aes(label = Exposure),
                  size = 4.5, 
                  color = 'black') +
  xlab("HR")+
  ylab("-Log10(p-value)")

#Temporal evolutions#
### Match（1:10match）
install.packages("MatchIt")
library(MatchIt)
m.out1 <- matchit(epilepsy_status~age+ethn+Qaulification+Socioeconomic+bmi+Smoking_status+Alcohol_consumption,
                  method = "nearest", distance = "mahalanobis" , ratio = 10,  link = "logit" ,
                  exact = ~sex,      
                  data = a) 
plot(summary(m.out1)) 
m.data <- match.data(m.out1)

m.data=m.data[order(m.data$subclass),]
time_scale=m.data$epilepsy_years[which(m.data$epilepsy_status==1)]
m.data$time_scale=rep(time_scale,each=11)
m.data$time_scale=m.data$time_scale*sign(-1) 
write.csv(m.data,"match_incident_epilepsy.csv")
df_final<-data.frame(eid=m.data[,1])
for (i in 12:2931) {
  df=m.data[,c(1:11,i,2932:2934)]
  df=na.omit(df)
  FML=as.formula(paste0(colnames(m.data)[i],"~sex+age+ethn+Qaulification+bmi+Socioeconomic+Smoking_status+Alcohol_consumption"))
  fit=lm(FML,data = df)
  res <- fit$residuals
  df<-data.frame(eid=df[,1],res=res)
  colnames(df)[2]<-paste0(colnames(m.data)[i],"_res")
  df_final<-left_join(df_final,df,by='eid')
}
library(tidyr)
library(dplyr)
library(stringr)
library(ggplot2)
df_final1=left_join(df_final,m.data[c(1:11,2932:2934)],by="eid")

df_final1$subclass=as.factor(df_final1$subclass)
df_group=df_final1 %>% group_by(subclass) 
variable.names=colnames(df_group)[2:2921]
t=df_group %>% summarise(
  (get(variable.names[1])[which(epilepsy_status==1)]-mean(get(variable.names[1])[which(epilepsy_status==0)],na.rm=T))/sd(get(variable.names[1])[which(epilepsy_status==0)],na.rm=T)
) 
colnames(t)[2]=str_sub(variable.names[1],1,-5)
for (i in 2:2920) {
  t2=df_group %>% summarise(
    (get(variable.names[i])[which(epilepsy_status==1)]-mean(get(variable.names[i])[which(epilepsy_status==0)],na.rm=T))/sd(get(variable.names[i])[which(epilepsy_status==0)],na.rm=T)
  ) 
  colnames(t2)[2]=str_sub(variable.names[i],1,-5)
  t=cbind(t,t2[,2])
}
time=df_group %>% summarise(
  unique(time_scale)
) 
t=cbind(t,time[,2])
colnames(t)[2922]="Year"
df_t<-gather(t,key='Protein',value='Value',-subclass,-Year)
colnames(df_t)[4]<-'Estimate'

variable.names=colnames(t)[2:2921]
df_loess=data.frame("Year"=NA,"Protein"=NA,"Estimate_loess"=NA)
for (i in variable.names) {
  df2=filter(df_t,Protein==i)
  df2=na.omit(df2)
  df3=data.frame(Year=seq(-15.0,-0.2,0.2),Protein=rep(i,length(seq(-15.0,-0.2,0.2))))
  loess90 <- loess(Estimate ~ Year, data=df2, span=300)
  smooth90 <- predict(loess90,df3)
  df3$Estimate_loess=smooth90
  df_loess=rbind(df_loess,df3)
}
df_loess1=df_loess[-1,]
getwd()
write.csv(df_loess1,"tragectories_loess.csv")

#cluster#
df_loess_w=pivot_wider(df_loess,names_from = Year,values_from = Estimate_loess)
df_loess_w=as.data.frame(df_loess_w)
df_loess_w<-df_loess_w[-1,]
df_loess_w<-merge(df_loess_w,sig,by='Protein')
row.names(df_loess_w)=df_loess_w$Protein
df_loess_w=df_loess_w[,-c(1:4)]
df_loess_w=as.matrix(df_loess_w)
dist_protein <- dist(df_loess_w, method="euclidean")  #Cosine  minkowski euclidean Manhattan 
fit_protein <- hclust(dist_protein, method="ward.D") #ward.D   complete
heatmap(as.matrix(dist_protein))


#SEM#
library(lavaan)
sem_model_0 <- '
# measurement model
  status=~Epilepsy_status
  stress=~Stress_events
  ProL=~Protein1+Protein2+Protein3
  
# structural model
  status ~ c*stress + b1*ProL
  ProL ~ a1*stress
  IE:=a1*b1
'
fit_model <- sem(sem_model_0, data = mydata, std.lv = TRUE)
summary(fit_model, fit.measures=TRUE,standard=TRUE)
fitMeasures(fit_model,c("chisq","df","pvalue","gfi","cfi","rmr","srmr","rmsea"))
